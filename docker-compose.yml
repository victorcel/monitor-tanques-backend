services:
    nginx:
        build:
            context: ./dockerfiles
            dockerfile: nginx.dockerfile
        container_name: monitor-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./dockerfiles/nginx:/etc/nginx/conf.d
            - /var/log/nginx:/var/log/nginx
        depends_on:
            - app
        networks:
            - monitor-tanques-network
    app:
        build:
            args:
                user: sammy
                uid: 1000
            context: ./dockerfiles
            dockerfile: php.dockerfile
        container_name: monitor-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - mariadb
        networks:
            - monitor-tanques-network
    composer:
        build:
            context: ./dockerfiles
            dockerfile: composer.dockerfile
        container_name: monitor-composer
        volumes:
            - ./:/var/www
        networks:
            - monitor-tanques-network
    mariadb:
        image: mariadb:10.6
        container_name: monitor-db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - monitor-tanques-mariadb:/var/lib/mysql
        networks:
            - monitor-tanques-network
    init-permissions:
        container_name: monitor-init-permissions
        image: alpine
        volumes:
            - .:/var/www
        command: sh -c "mkdir /var/www/html/vendor && chmod -R 777 /var/www/html/vendor  && chmod -R 777 /var/www/html/storage && chmod -R 777 /var/www/html/bootstrap/cache && chown -R 1000:1000 /var/www/html/storage /var/www/html/bootstrap/cache"
        depends_on:
            - app
    artisan:
        container_name: monitor-artisan
        build:
            args:
                user: sammy
                uid: 1000
            context: ./dockerfiles
            dockerfile: php.dockerfile
        volumes:
            - .:/var/www
        working_dir: /var/www
        depends_on:
            - mariadb
        command: sh -c "php artisan migrate --force"
        networks:
            - monitor-tanques-network
networks:
    monitor-tanques-network:
        driver: bridge

volumes:
    monitor-tanques-mariadb:
        driver: local
